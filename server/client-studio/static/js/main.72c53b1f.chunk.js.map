{"version":3,"sources":["scripts/BufferLoader.js","exampleData.js","components/studio.js","serviceWorker.js","index.js","assets/instrumentsImgs.js"],"names":["BufferLoader","context","urlList","callback","console","log","this","onload","bufferList","Array","loadCount","prototype","loadBuffer","url","index","request","XMLHttpRequest","open","responseType","loader","decodeAudioData","response","buffer","length","alert","error","onerror","send","load","i","DATA","instrument","id","title","effects","audioFiles","location","audioUrl","Studio","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","changeVolume","event","volume","setState","playAll","channelData","state","resume","forEach","channel","ci","audio","ai","bufferSource","createBufferSource","connect","destination","start","currentTime","spacing","status","clearInterval","timer","startTime","Date","now","runningTime","setInterval","pauseAll","suspend","suspended","stopAll","stop","handleDrag","e","data","loc","node","split","x","addChannel","push","new","deleteAudio","disconnect","splice","onUpload","loading","reader1","FileReader","target","that","assertThisInitialized","file","files","ev","result","then","formData","FormData","append","axios","post","headers","X-Requested-With","secure_url","readAsArrayBuffer","saveSong","channels","songId","bpm","editTitle","URL","document","searchParams","get","playing","playbackTime","res","mappedArr","audioClip","window","AudioContext","webkitAudioContext","chIndex","acIndex","s","pad","n","z","slice","ms","secs","_this2","react_default","a","createElement","className","main_bundle_default","text","labelClassName","inputClassName","inputWidth","onFocusOut","bind","Button_default","index_es","icon","faStepBackward","faStepForward","onClick","faStop","faPause","faPlay","faMicrophone","msToTime","faMusic","faSave","map","key","_id","src","InstrumentImgs","type","onChange","faVolumeMute","faHeadphones","Slider_default","classes","root","track","value","aria-labelledby","faPlus","style","left","audioclip","react_draggable_default","bounds","axis","defaultPosition","y","onDrag","lib_default","width","duration","height","waveStyle","animate","color","pointWidth","faWindowClose","Component","Boolean","hostname","match","ReactDOM","render","studio","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","guitar","vocal","bass","drums"],"mappings":"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","file":"static/js/main.72c53b1f.chunk.js","sourcesContent":["function BufferLoader(context, urlList, callback) {\n    console.log('new bufer')\n    this.context = context;\n    this.urlList = urlList;\n    this.onload = callback;\n    this.bufferList = new Array();\n    this.loadCount = 0;\n}\n\nBufferLoader.prototype.loadBuffer = function(url, index) {\n    console.log('load bufer')\n    // Load buffer asynchronously\n    var request = new XMLHttpRequest();\n    request.open(\"GET\", url, true);\n    request.responseType = \"arraybuffer\";\n\n    var loader = this;\n\n    request.onload = function() {\n        // Asynchronously decode the audio file data in request.response\n        loader.context.decodeAudioData(\n            request.response,\n            function(buffer) {\n                if (!buffer) {\n                    alert('error decoding file data: ' + url);\n                    return;\n                }\n                loader.bufferList[index] = buffer;\n                if (++loader.loadCount == loader.urlList.length)\n                    loader.onload(loader.bufferList);\n            },\n            function(error) {\n                console.error('decodeAudioData error', error);\n            }\n        );\n    }\n\n    request.onerror = function() {\n        alert('BufferLoader: XHR error');\n    }\n\n    request.send();\n}\n\nBufferLoader.prototype.load = function() {\n    console.log(this.urlList);\n    for (var i = 0; i < this.urlList.length; ++i)\n        this.loadBuffer(this.urlList[i], i);\n}\n\nexport default BufferLoader;\n","var DATA = [{\n    'instrument': 'bass',\n    'id': 1,\n    'title': 'Gady Bass',\n    'effects': [],\n    'audioFiles': [{\n        'id':1,\n        'location':0,\n        'audioUrl':'https://res.cloudinary.com/voiera/video/upload/v1557509436/bass_z1qrde.mp3'\n    }]\n},\n    {\n        'instrument': 'guitar',\n        'id': 2,\n        'title': 'Elinor Guitar',\n        'effects': [],\n        'audioFiles': [{\n            'id':2,\n            'location':0,\n            'audioUrl':'https://res.cloudinary.com/voiera/video/upload/v1557508452/guitar_bu0mfp.mp3'\n        }]\n    },\n    {\n        'instrument': 'vocal',\n        'id': 3,\n        'title': 'Elior Vocal',\n        'effects': [],\n        'audioFiles': [{\n            'id':3,\n            'location':0,\n            'audioUrl':'https://res.cloudinary.com/voiera/video/upload/v1557509428/vocal_qno7k9.mp3'\n        }]\n    },\n    {\n        'instrument': 'drums',\n        'id': 4,\n        'title': 'Gady Drums',\n        'effects': [],\n        'audioFiles': [{\n            'id':4,\n            'location':119,\n            'audioUrl':'https://res.cloudinary.com/voiera/video/upload/v1557509429/drums_udzggo.mp3'\n        }]\n    }\n];\n\nexport default DATA;","import React, { Component } from 'react';\nimport '../App.css';\nimport Button from '@material-ui/core/Button'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlay,faStop,faStepBackward,faStepForward,faMicrophone,faMusic,faVolumeMute, faHeadphones,faPause,faPlus,faWindowClose,faSave } from '@fortawesome/free-solid-svg-icons'\nimport Slider from '@material-ui/lab/Slider';\nimport BufferLoader from '../scripts/BufferLoader'\nimport Draggable from 'react-draggable';\nimport DATA from '../exampleData.js';\nimport Waveform from 'waveform-react';\nimport {InstrumentImgs} from '../assets/instrumentsImgs';\nimport EditableLabel from 'react-inline-editing';\nimport axios from 'axios';\n\nclass Studio extends Component {\n    constructor(props){\n        super(props);\n        const that = this;\n        let urlparams = (new URL(document.location)).searchParams;\n        let id = urlparams.get(\"id\");\n        this.state = {\n            volume: 100,\n            spacing: 8,\n            runningTime: 0,\n            playing: true,\n            playbackTime: 0,\n            channelData: DATA,\n            loading:true,\n            songId: id,\n            title: 'New Song',\n            bpm: 120\n        };\n        axios.post('http://localhost:1234/studio/getDataForStudio',{id})\n            .then((res)=>{\n            res = res.data;\n            that.setState({channelData: res.channels, title: res.title, bpm: res.bpm});\n            console.log(this.state)\n            const mappedArr = [];\n            res.channels.forEach((channel)=>{\n                channel.audioFiles.forEach((audioClip)=>{\n                    mappedArr.push(audioClip.audioUrl);\n                })\n            });\n            window.AudioContext = window.AudioContext||window.webkitAudioContext;\n            const context = new AudioContext();\n            context.suspend();\n            this.state.context = context;\n            const bufferLoader = new BufferLoader(\n                context,\n                mappedArr,\n                finishedLoading\n            );\n            bufferLoader.load();\n\n            function finishedLoading(bufferList) {\n                let i = 0;\n                const data = that.state.channelData;\n                data.forEach((channel,chIndex)=>{\n                    channel.audioFiles.forEach((audioClip,acIndex)=>{\n                        data[chIndex].audioFiles[acIndex].buffer = bufferList[i];\n                        i++;\n                    })\n                });\n                that.setState({context,loading:false,channelData:data});\n            }\n        });\n\n    }\n\n    msToTime(s) {\n\n        // Pad to 2 or 3 digits, default is 2\n        function pad(n, z) {\n            z = z || 2;\n            return ('00' + n).slice(-z);\n        }\n\n        var ms = s % 1000;\n        s = (s - ms) / 1000;\n        var secs = s % 60;\n        s = (s - secs) / 60;\n        var mins = s % 60;\n\n        return pad(mins) + ':' + pad(secs) + '.' + pad(ms, 3);\n    }\n\n\n    changeVolume = (event, volume) => {\n        this.setState({ volume });\n    };\n\n    playAll = () => {\n        const channelData = this.state.channelData;\n        this.state.context.resume();\n        this.state.channelData.forEach((channel,ci)=>{\n            channel.audioFiles.forEach((audio,ai) => {\n                let bufferSource = this.state.context.createBufferSource();\n                bufferSource.buffer = audio.buffer;\n                bufferSource.connect(this.state.context.destination);\n                bufferSource.start(this.state.context.currentTime + audio.location/this.state.spacing);\n                channelData[ci].audioFiles[ai].bufferSource = bufferSource;\n            })\n        });\n        this.setState(state => {\n            if (state.status) {\n                clearInterval(this.timer);\n            } else {\n                const startTime = Date.now() - this.state.runningTime;\n                this.timer = setInterval(() => {\n                    this.setState({ runningTime: Date.now() - startTime });\n                });\n            }\n            return { status: !state.status };\n        });\n    };\n    pauseAll = () => {\n        clearInterval(this.timer);\n        this.state.context.suspend();\n        this.setState({status: false, suspended: true });\n    };\n    stopAll = () => {\n        clearInterval(this.timer); // new\n        this.state.channelData.forEach((channel)=>{\n            channel.audioFiles.forEach((audio) => {\n                audio.bufferSource.stop(this.state.context.currentTime);\n            })\n        });\n        this.state.context.suspend();\n        this.setState({runningTime: 0, status: false, suspended: true });\n    };\n\n    handleDrag = (e,data) => {\n        const channelData = this.state.channelData;\n        const loc = data.node.id.split('-');\n        channelData[loc[1]].audioFiles[loc[2]].location = data.x;\n        this.setState(channelData);\n    };\n\n    addChannel = () => {\n        console.log(\"add channel\")\n        let channelData = this.state.channelData;\n        channelData.push({\n            'instrument': 'audio',\n            'title': 'New Channel',\n            'effects': [],\n            'audioFiles': [],\n            'new': true\n        });\n        this.setState({channelData})\n    };\n\n    deleteAudio = (ci,ai) => {\n        let channelData = this.state.channelData;\n        if (channelData[ci].audioFiles[ai].bufferSource) {\n            channelData[ci].audioFiles[ai].bufferSource.disconnect();\n        }\n        channelData[ci].audioFiles.splice(ai,1);\n        this.setState({channelData});\n    };\n\n    onUpload = (e) => {\n        this.setState({loading:true});\n        const reader1 = new FileReader();\n        const ci = e.target.id.split('-')[2];\n        let channelData = this.state.channelData;\n        const that = this;\n        const file = e.target.files[0];\n        reader1.onload = function(ev) {\n            that.state.context.decodeAudioData(ev.target.result).then(function(buffer) {\n                // Initial FormData\n                const formData = new FormData();\n                formData.append(\"file\", file);\n                // formData.append(\"tags\", `codeinfuse, medium, gist`);\n                formData.append(\"upload_preset\", \"biwlw0dl\"); // Replace the preset name with your own\n                formData.append(\"api_key\", \"228417225742266\"); // Replace API key with your own Cloudinary key\n                formData.append(\"timestamp\", (Date.now() / 1000) | 0);\n\n                // Make an AJAX upload request using Axios (replace Cloudinary URL below with your own)\n                axios.post(\"https://api.cloudinary.com/v1_1/voiera/video/upload\", formData, {\n                    headers: { \"X-Requested-With\": \"XMLHttpRequest\" },\n                }).then(response => {\n                    const data = response.data;\n                    channelData[ci].audioFiles.push({\n                        location:0,\n                        audioUrl: data.secure_url,\n                        buffer : buffer,\n                    });\n                    that.setState({channelData,loading: false});\n                });\n            });\n        };\n        reader1.readAsArrayBuffer(file);\n\n    };\n\n    saveSong = () => {\n        axios.post('http://localhost:1234/studio/saveDataInStudio',{\n            channels: this.state.channelData,\n            songId: this.state.songId,\n            title: this.state.title,\n            bpm: this.state.bpm\n        })\n        // let files = [];\n        // this.state.channelData.forEach((channel)=>{\n        //     channel.audioFiles.forEach((audio) => {\n        //         if (audio.audioUrl === 'local') {\n        //             console.log(audio.file);\n        //             files.push(audio.file);\n        //         }\n        //     })\n        // });\n\n        // Push all the axios request promise into a single array\n        // const uploaders = files.map(file => {\n        //\n        // });\n\n        // Once all the files are uploaded\n        // axios.all(uploaders).then(() => {\n            //     // ... perform after upload is successful operation\n            //     var data = new FormData();\n            //     data.append('files', JSON.stringify(files));\n            //     data.append('channelData', this.state.channelData);\n            //     data.append('songId', this.state.songId);\n            //     data.append('title', this.state.title);\n            //     axios.post('http://localhost:1234/studio/saveDataInStudio',data,{\n            //         headers: {\n            //             'Content-Type': 'multipart/form-data'\n            //         }\n            //     })\n            //         .then((res) => {\n            //\n            //         })\n            // });\n    };\n\n    editTitle = (data) => {\n        //TODO handle empty string\n        this.setState({title:data})\n    };\n\n    componentWillUnmount() {\n        clearInterval(this.timer);\n    }\n    render() {\n        return (\n            <div>\n                {this.state.loading ? <div className=\"loading\">Loading...</div> : ''}\n                <div className=\"header\">\n                    <div className=\"songDetails\">\n                        <EditableLabel text={this.state.title}\n                                       labelClassName='songTitle'\n                                       inputClassName='songTitle'\n                                       inputWidth='300px'\n                                       onFocusOut={this.editTitle.bind(this)}\n                        />\n                    </div>\n                    <div className=\"controls\">\n                        <Button className={\"controlButton\"}>\n                            <FontAwesomeIcon icon={faStepBackward}/>\n                        </Button>\n                        <Button className={\"controlButton\"}>\n                            <FontAwesomeIcon icon={faStepForward}/>\n                        </Button>\n                        <Button className={\"controlButton\"} onClick={this.stopAll}>\n                            <FontAwesomeIcon icon={faStop}/>\n                        </Button>\n                        <Button className={\"controlButton\"} onClick={this.pauseAll}>\n                            <FontAwesomeIcon icon={faPause}/>\n                        </Button>\n                        <Button className={\"controlButton\"} onClick={this.playAll}>\n                            <FontAwesomeIcon icon={faPlay}/>\n                        </Button>\n                        <Button className={\"controlButton\"}>\n                            <FontAwesomeIcon icon={faMicrophone}/>\n                        </Button>\n                        <Button className={\"controlButton\"}>\n                            {this.msToTime(this.state.runningTime)}\n                        </Button>\n                        <Button className={\"controlButton\"}>\n                            <FontAwesomeIcon icon={faMusic}/>\n                        </Button>\n                        <Button className={\"controlButton\"}>\n                            {this.state.bpm} BPM\n                        </Button>\n                        <Button className={\"controlButton\"}>\n                            Cmaj\n                        </Button>\n                        <Button className={\"controlButton\"}>\n                            4/4\n                        </Button>\n                        <Button className={\"controlButton\"}>\n                            <FontAwesomeIcon icon={faSave} onClick={this.saveSong.bind(this)}/>\n                        </Button>\n                    </div>\n                </div>\n                    <div className=\"channels\">\n                        {this.state.channelData.map((channel,key) =>\n                            <div key={channel._id} className=\"channel\">\n                                <img src={InstrumentImgs[channel.instrument] || InstrumentImgs.audio}/>\n                                <div className=\"channel-details\">\n                                    <p>{channel.title}\n                                        <input className=\"fileUpload\" type='file' id={'upload-ch-'+key} onChange={this.onUpload} />\n                                    </p>\n                                    <FontAwesomeIcon icon={faVolumeMute}/>\n                                    <FontAwesomeIcon icon={faHeadphones}/>\n                                    <Slider classes={{root: \"volume-slider\",track: \"volume-track\"}}\n                                            value={this.state.volume}\n                                            aria-labelledby=\"label\"\n                                            onChange={this.changeVolume}/>\n                                    <span>FX</span>\n                                </div>\n                            </div>\n                        )}\n                        <div>\n                            <Button className={\"controlButton\"} onClick={this.addChannel.bind(this)}>\n                                <FontAwesomeIcon icon={faPlus}/>\n                            </Button>\n                        </div>\n                    </div>\n                    <div className=\"timeline-container\">\n                        <div className=\"playLine\" style={{'left': (this.state.runningTime/1000) * (this.state.spacing)}}/>\n                        <div className=\"timeline\">\n                            <div className=\"timebar\"></div>\n                            {this.state.channelData.map((channel,ci) =>\n                                <div key={channel._id} className=\"timebar-channel\" id={\"channel-\"+ci}>\n                                    {channel.audioFiles.map((audioclip,ai) =>\n                                        <Draggable key={audioclip._id} bounds={\"#channel-\"+ci} axis=\"x\" defaultPosition={{'x':audioclip.location,y:0}} onDrag={this.handleDrag}>\n                                            <div id={'audio-'+ci+'-'+ai} className=\"audioSnippet\">\n                                                <div className=\"title\">\n                                                Audio File {audioclip.id} : {this.msToTime((audioclip.location / this.state.spacing) * 1000)}\n                                                </div>\n                                                <Waveform\n                                                    buffer={audioclip.buffer}\n                                                    width={(audioclip.buffer && (audioclip.buffer.duration || 0)) * this.state.spacing}\n                                                    height={60}\n                                                    waveStyle={{\n                                                        // animate waveform on draw (default: true)\n                                                        animate: true,\n                                                        // waveform color\n                                                        color: '#95adc9',\n                                                        // width of each rendered point (min: 1, max: 10)\n                                                        pointWidth: 1\n                                                    }}\n                                                />\n                                                <Button className=\"deleteAudio\" onClick={this.deleteAudio.bind(this,ci,ai)}>\n                                                    <FontAwesomeIcon icon={faWindowClose}/>\n                                                </Button>\n                                            </div>\n                                        </Draggable>\n                                    )}\n                                </div>\n                            )}\n\n                        </div>\n\n                    </div>\n            </div>\n        );\n    }\n}\n\nexport default Studio;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Studio from './components/studio';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Studio />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports.InstrumentImgs = {\n    'guitar' : '../images/guitar.png',\n    'vocal' : '../images/vocal.png',\n    'bass' : '../images/guitar.png',\n    'drums' : '../images/drums.png',\n    'audio' : '../images/audio.png'\n}"],"sourceRoot":""}